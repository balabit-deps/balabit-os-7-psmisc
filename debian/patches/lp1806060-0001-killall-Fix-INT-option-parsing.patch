From cf80d701397d2ff705ab1c1250e3906f32034539 Mon Sep 17 00:00:00 2001
From: Craig Small <csmall@enc.com.au>
Date: Sun, 20 May 2018 20:42:12 +1000
Subject: [PATCH] killall: Fix -INT option parsing

Sometimes killall gets confused between a signal name and a set of
options. This small patch should un-confuse it.

Author: Christian Ehrhardt <christian.ehrhardt@canonical.com>
Original-Author: Craig Small <csmall@enc.com.au>
Origin: backport, https://gitlab.com/psmisc/psmisc/commit/cf80d701397d2ff705ab1c1250e3906f32034539
Bug-Ubuntu: https://bugs.launchpad.net/bugs/1806060
Last-Update: 2018-12-11

---
 ChangeLog     | 1 +
 src/killall.c | 7 ++++++-
 2 files changed, 7 insertions(+), 1 deletion(-)

--- a/src/killall.c
+++ b/src/killall.c
@@ -803,6 +803,7 @@ main (int argc, char **argv)
   int sig_num;
   int optc;
   int myoptind;
+  int skip_error=0;
   struct passwd *pwent = NULL;
   char yt[16];
   char ot[16];
@@ -912,6 +913,7 @@ main (int argc, char **argv)
         ignore_case = 1;
       } else {
 	      sig_num = get_signal (argv[optind]+1, "killall");
+          skip_error=1;
       }
       break;
     case 'V':
@@ -947,7 +949,10 @@ main (int argc, char **argv)
         if (argv[optind-1][1] >= '0' && argv[optind-1][1] <= '9') {
           sig_num = atoi(argv[optind-1]+1);
         } else {
-          usage(NULL);
+            if (skip_error)
+                skip_error=0;
+            else
+                usage(NULL);
         }
       }
       break;
